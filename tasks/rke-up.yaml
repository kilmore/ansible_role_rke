---

# Install, configure and run Rancher Kubernetes Engine (RKE) on the target hosts to configure a Kubernetes cluster

# - name: Include cloud provider variables
#   include_vars: "{{ rke_cloud_provider }}.yml"
#   when: rke_cloud_provider is defined

# - name: Run cloud provider pre-install tasks
#   include: "{{ rke_cloud_provider_pre_install_tasks }}"
#   when: rke_cloud_provider_pre_install_tasks is defined

- name: Download RKE binary
  get_url:
    url: "{{ rke_binary_url }}"
    # checksum: "{{ rke_binary_checksum }}"
    dest: /usr/local/bin/rke
    mode: "+rx"
  register: rke_binary

- name: Ensure config directory exists
  file:
    path: "{{ rke_config_dir }}"
    state: directory

- name: Create/update RKE config file
  template:
    src: cluster.yml.j2
    dest: "{{ rke_config_dir }}/cluster.yml"
    mode: u=rw,g=r,o=
  register: rke_cluster_config

# - name: Run RKE installer
#   shell: |
#     set -eo pipefail
#     rke up | tee /var/log/rke-up.log
#   args:
#     chdir: "{{ rke_config_dir }}"
#   when: rke_binary is changed or rke_cluster_config is changed or rke_force_configure

# - name: Install kubectl
#   get_url:
#     url: https://storage.googleapis.com/kubernetes-release/release/{{ rke_kubernetes_version.split('-', 1)[0] }}/bin/linux/amd64/kubectl
#     dest: /usr/local/bin/kubectl
#     mode: "+rx"

# - name: Ensure $HOME/.kube exists
#   file:
#     path: "{{ ansible_env.HOME }}/.kube"
#     state: directory

# - name: Copy kubeconfig to default location
#   copy:
#     remote_src: yes
#     src: "{{ rke_config_dir }}/kube_config_cluster.yml"
#     dest: "{{ ansible_env.HOME }}/.kube/config"

# - name: Run cloud provider post-install tasks
#   include: "{{ rke_cloud_provider_post_install_tasks }}"
#   when: rke_cloud_provider_post_install_tasks is defined
